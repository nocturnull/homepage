// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------

@use 'sass:string';
@use 'sass:meta';
@use 'sass:map';
@use 'variables';

/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus,
    &:focus-within {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus,
    &:focus-within {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Kitty Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}

/// Responsive breakpoint manager
/// @access public
/// @param {String} $breakpoint - Breakpoint
/// @requires $breakpoints
/// @link https://sass-guidelin.es/#responsive-web-design-and-breakpoints
@mixin respond-to($breakpoint) {
  $raw-query: map.get(variables.$breakpoints, $breakpoint);

  @if $raw-query {
    $query: if(
                    meta.type-of($raw-query) == 'string',
                    string.unquote($raw-query),
                    meta.inspect($raw-query)
    );

    @media (width <= #{$query}) {
      @content;
    }
  } @else {
    @error 'No value found for `#{$breakpoint}`. '
         + 'Please make sure it is defined in `$breakpoints` map.';
  }
}
